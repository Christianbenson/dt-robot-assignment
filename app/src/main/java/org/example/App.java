/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import com.google.common.base.Strings;

import java.util.NoSuchElementException;
import java.util.Scanner;

public class App {
    private static String getGreeting() {
        return "Hello and welcome to robotSim!";
    }

    private static String roomSizePrompt() {
        return "roomsize:";
    }

    private static String robotStartPrompt() {
        return "robotstart:";
    }

    private static String movementPrompt() {
        return "enter movements:";
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println(getGreeting());
        String input = "";

        System.out.println(roomSizePrompt());
        try {
            input = scanner.nextLine();
            System.out.println("you entered: " + input);
        } catch(NoSuchElementException e) {
            //todo
        }
        Room room = getRoomFromString(input);

        System.out.println(robotStartPrompt());
        try {
            input = scanner.nextLine();
            System.out.println("you entered: " + input);
        } catch(NoSuchElementException e) {
            //todo
        }
        Robot robot = getRobotFromString(input, room);

        System.out.println(movementPrompt());
        try {
            input = scanner.nextLine();
            System.out.println("you entered: " + input);
        } catch(NoSuchElementException e) {
            //todo
        }
        try {
            robot.executeStringOfCommands(input);
        } catch (Exception e) {
            if(e instanceof IndexOutOfBoundsException) {
                System.out.println(e.getMessage());
            }
            System.out.println(e.getMessage());
        }

        System.out.println(robot.toString());
    }

    private static boolean validateRoomSize(String input) {
        return !Strings.isNullOrEmpty(input);
    }

    private static boolean validateRobotStart(String input) {
        return !Strings.isNullOrEmpty(input);
    }

    //TODO we dont actually check if the input is in number format
    private static Room getRoomFromString(String input) {
        String[] spaceSeparatedStrings = input.split("\\s+");
        int width = Integer.valueOf(spaceSeparatedStrings[0]);
        int depth = Integer.valueOf(spaceSeparatedStrings[1]);
        return new Room(width, depth);
    }

    //TODO input is not validated
    private static Robot getRobotFromString(String input, Room room) {
        String[] spaceSeparatedStrings = input.split("\\s+");
        int xStart = Integer.valueOf(spaceSeparatedStrings[0]);;
        int yStart = Integer.valueOf(spaceSeparatedStrings[1]);
        char direction = spaceSeparatedStrings[2].charAt(0);
        return new Robot(xStart, yStart, direction, room);
    }
}
